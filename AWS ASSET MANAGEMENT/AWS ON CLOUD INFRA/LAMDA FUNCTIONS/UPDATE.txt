import boto3
import json

dynamodb = boto3.resource('dynamodb')
table = dynamodb.Table('Assets')

def lambda_handler(event, context):
    try:
        print("Event received:", json.dumps(event))

        asset_id = event['pathParameters']['id']
        body = json.loads(event['body'])

        if not body:
            raise ValueError("Body is empty or invalid JSON")

        update_expression = 'SET '
        expression_attrs = {}
        expression_names = {}

        for key, value in body.items():
            if key != 'id':
                placeholder = f'#{key}' if key in ['status'] else key
                update_expression += f'{placeholder} = :{key}, '
                expression_attrs[f':{key}'] = value
                if key in ['status']:
                    expression_names[f'#{key}'] = key

        update_expression = update_expression.rstrip(', ')

        print("UpdateExpression:", update_expression)
        print("ExpressionAttributeValues:", expression_attrs)
        print("ExpressionAttributeNames:", expression_names)

        update_args = {
            'Key': {'id': asset_id},
            'UpdateExpression': update_expression,
            'ExpressionAttributeValues': expression_attrs
        }

        if expression_names:
            update_args['ExpressionAttributeNames'] = expression_names

        table.update_item(**update_args)

        return {
            'statusCode': 200,
            'headers': {'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({'message': 'Asset updated successfully'})
        }

    except Exception as e:
        print("‚ùå Exception:", str(e))
        return {
            'statusCode': 500,
            'headers': {'Access-Control-Allow-Origin': '*'},
            'body': json.dumps({'error': str(e)})
        }
